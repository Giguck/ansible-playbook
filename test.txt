stage('Update static') {
            sh(script: 'mkdir /tmp/nginx_backup')
            dir('_nginx_migration_script'){
                sh(script: 'ls -a')
                withCredentials([[$class: 'VaultSignedSSHKeyCredentialBinding',
                credentialsId: 'pls_flow_ssh_syngxdevops', // ID ссылочного креда с типом Vault SSH private key with signed public key Credential
                privateKeyVar: 'SSH_PRIVATE_KEY',           // Переменная, где будет храниться путь к файлу со значением приватного ключа
                passphraseVar: 'SSH_PRIVATE_KEY_PASS']]) {  // Переменная, где будет хранится значение парольной фразы

                    // Старт SSH агента, данный код не менять                 
                    sshagent([]){
                        sh '''
                        set +x
                        echo -e "#!/bin/sh\necho \\$SSH_PRIVATE_KEY_PASS" > send_ps.sh
                        chmod +x ./send_ps.sh
                        DISPLAY=1 SSH_ASKPASS="./send_ps.sh" ssh-add $SSH_PRIVATE_KEY < /dev/null
                        '''
                        try {
                            // Вызов ansiblePlaybook - заменить на требуемые данные
                            ansiblePlaybook (
                                installation: 'ansible-core2.10.3',
                                playbook: "tree.yml",
                                inventory: "inventory.ini",
                                extras: "--extra-vars 'host=nginx_ift'"
                            )
                        }
                        catch (error) {
                            currentBuild.result = 'FAILURE'
                            println (error)
                        }
                        finally {
                            sleep (time:10,unit:"SECONDS")
                        }
                    }
                    sh(script: 'ls -a')
                }
            }
            sh(script: 'ls -a')
            dir('/tmp/nginx_backup'){
                sh(script: 'ls -a')
            }
        }


---
- name: Миграция конфигов с Nginx на Synginx
  hosts: "{{ host }}"
  become: true
  vars:
    nginx_conf_dir: /etc/nginx
    synginx_conf_dir: /etc/synginx
    backup_dir: /tmp/nginx_backup
    archive_name: nginx_conf_{{ ansible_date_time.date }}.tar.gz

  tasks:
    - name: Архивировать конфиги Nginx
      archive:
        path: "{{ nginx_conf_dir }}/"
        dest: "/etc/{{ archive_name }}"
        format: gz
      notify: 
        - show archive path

    - name: Скопировать архив на контрол-хост (Jenkins)
      fetch:
        src: "/etc/{{ archive_name }}"
        dest: "./nginx_backup/"
        flat: yes

    - name: Очистить временные файлы
      file:
        path: "{{ backup_dir }}"
        state: absent
      when: cleanup | default(true)

  handlers:
    - name: show archive path
      debug:
        msg: "Архив конфигов создан: /etc/{{ archive_name }}"


[defaults]
host_key_checking=false
inventory=./inventory.ini
deprecation_warnings = False
AddKeysToAgent=yes
ControlMaster=yes
UserKnownHostsFile=/dev/null
IdentitiesOnly=yes
StrictHostKeyChecking=no
display_skipped_hosts = False
display_ok_hosts = False


# [pprb_emailSigma_profile_demo]
# pprb_emailSigma_profile_demo ansible_host=tkldg-bbpp00001.delta.sbrf.ru ansible_user=sowacfg

[nginx_ift]
nginx_ift ansible_host=tkliw-bbpp00002.vm.mos.cloud.sbrf.ru ansible_user=syngxdevops ansible_private_key_file=send_ps.sh

[synginx_ift]
synginx_ift ansible_host=tsldw-bbpp00002.cloud.delta.sbrf.ru ansible_user=syngxdevops ansible_private_key_file=send_ps.sh




[nginx_hosts]
nginx_ift ansible_host=tkliw-bbpp00002.vm.mos.cloud.sbrf.ru ansible_user=syngxdevops ansible_private_key_file=send_ps.sh

[synginx_hosts]
synginx_ift ansible_host=tsldw-bbpp00002.cloud.delta.sbrf.ru ansible_user=syngxdevops ansible_private_key_file=send_ps.sh

[nginx_ift:children]
nginx_hosts

[synginx_ift:children]
synginx_hosts
